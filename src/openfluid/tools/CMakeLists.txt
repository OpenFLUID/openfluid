
FIND_PACKAGE(CURL REQUIRED)
FIND_PACKAGE(LibArchive REQUIRED)

ADD_DEFINITIONS(${LibXML2_CFLAGS})

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS} ${LibXML2_INCLUDE_DIRS} ${CURL_INCLUDE_DIRS} ${LibArchive_INCLUDE_DIRS})
LINK_DIRECTORIES(${LibXML2_LIBRARY_DIRS} ${CURL_LIBRARY_DIR})

FILE(GLOB OPENFLUID_TOOLS_CPP *.cpp)
FILE(GLOB OPENFLUID_TOOLS_HPP *.hpp)


ADD_LIBRARY(openfluid-tools SHARED ${OPENFLUID_TOOLS_CPP} ${OPENFLUID_TOOLS_HPP})

SET_TARGET_PROPERTIES(openfluid-tools PROPERTIES VERSION "${VERSION_MAJOR}.${VERSION_MINOR}" 
                                        SOVERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
                                        LIBRARY_OUTPUT_DIRECTORY "${LIB_OUTPUT_PATH}"
                                        RUNTIME_OUTPUT_DIRECTORY "${LIB_OUTPUT_PATH}"
                                        ARCHIVE_OUTPUT_DIRECTORY "${LIB_OUTPUT_PATH}")

TARGET_LINK_LIBRARIES(openfluid-tools 
                      openfluid-core
                      ${LibXML2_LIBRARIES} 
                      ${Boost_SYSTEM_LIBRARY} ${Boost_FILESYSTEM_LIBRARY}
                      ${CURL_LIBRARY}
                      ${GLIBMM_LIBRARIES}
                      ${LibArchive_LIBRARIES})




INSTALL(TARGETS openfluid-tools
        RUNTIME DESTINATION ${BIN_INSTALL_PATH}
        LIBRARY DESTINATION ${LIB_INSTALL_PATH}
        ARCHIVE DESTINATION ${LIB_INSTALL_PATH})
   

INSTALL(FILES ${OPENFLUID_TOOLS_HPP} DESTINATION ${INCLUDE_OPENFLUID_INSTALL_PATH}/tools)

   
IF(NOT (CMAKE_BUILD_TYPE MATCHES "Release"))
  ADD_SUBDIRECTORY(tests)
ENDIF(NOT (CMAKE_BUILD_TYPE MATCHES "Release"))  
   
   
